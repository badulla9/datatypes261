
Anonymous function:
A function with out any name is called anonymous function
Arrow function:
Es6 version
More readable and more structure
Anonymous functions(lambda functions)
Without function name but they are assigned to a variable
Example:
 Arrow function with out parameters:
        Let c=()=>{
       console.log(“hi venkat”)
       }
       c();
 Arrow function with parameters:
    <script>
        let x =(x,y)=>{
            console.log(x+y)
        }
        x(20,30)
        x(40,50)
 
Arrow function with one argument :

Using without parentheses:
cript>
        let greet=x=>console.log(x)
        greet('hello')
  


Arrow function without argument:
<script>
        let greet = ( ) => console.log("hello")
        greet()



Arrow functions as an expression:
<script>
        let age =18;
        let welcome=(age<18)?
        ()=>console.log("hi minor"):
   () =>console.log("hi major");
        welcome()

Asynchronous function:
<script>
        console.log("hi rambabu");
        setTimeout(() => {
            console.log("I'm waiting")
        },5000);
        console.log("i'm in lab")

Synchronous:
function task1(){
            console.log("task1 : start")
        }
        function task2(){
            console.log("task2 : start")
        }
        function task3(){
            console.log("task3 : start")
        }
        task1()
        task2()
        task3()

Java script callbacks:
Callback functions is a function that is passed argument to another functions


code:
------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <script>
        function greet(name,callback){
        console.log(`hello,${name}!`)
        callback();
        }
        function sayGoodBye(){
            console.log("GoodBye")
        }
        greet('pooji',sayGoodBye)
        /*console.log("hi rambabu");
        setTimeout(() => {
            console.log("I'm waiting")
        },5000);
        console.log("i'm in lab")
        function task1(){
            console.log("task1 : start")
        }
        function task2(){
            console.log("task2 : start")
        }
        function task3(){
            console.log("task3 : start")
        }
        task1()
        task2()
        task3()
        /*let age =18;
        let welcome=(age<18)?
        ()=>console.log("hi minor"):
        () =>console.log("hi major");
        welcome()
       /* let greet = ( ) => console.log("hello")
        greet()
/*let greet=x=>console.log(x)
        greet('hello')
       /* let x =(x,y)=>{
            console.log(x+y)
        }
        x(20,30)
        x(40,50)
        /*let c=()=>{
            console.log('HI BOBY')
            }
            c();*/
            
    </script>
</body>
</html>
