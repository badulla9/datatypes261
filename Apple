import React, { useReducer } from 'react';

function appleReducer(state, action) {
  switch (action.type) {
    case 'ADD_APPLE':
      return [...state, { id: Date.now() }];
    case 'EAT_APPLE':
      return state.length > 0 ? state.slice(0, -1) : state;
    default:
      return state;
  }
}

function App() {
  const [apples, dispatch] = useReducer(appleReducer, []);

  return (
    <div style={styles.container}>
      <h1 style={styles.title}>üçé APPLE Counter</h1>
      <p style={styles.counterText}>Number of APPLES: <span style={styles.counterNumber}>{apples.length}</span></p>
      <div style={styles.buttonContainer}>
        <button
          onClick={() => dispatch({ type: 'ADD_APPLE' })}
          style={styles.addButton}
        >
          ADD APPLE
        </button>
        <button
          onClick={() => dispatch({ type: 'EAT_APPLE' })}
          style={styles.eatButton}
        >
          EAT APPLE
        </button>
      </div>
      <div style={styles.appleContainer}>
        {apples.map((apple) => (
          <img
            key={apple.id}
            src="https://upload.wikimedia.org/wikipedia/commons/1/15/Red_Apple.jpg"
            alt="Apple"
            style={styles.appleImage}
          />
        ))}
      </div>
    </div>
  );
}

// CSS styles
const styles = {
  container: {
    padding: '40px',
    textAlign: 'center',
    background: 'linear-gradient(135deg, #ff6f61, #ffcccb)',
    borderRadius: '20px',
    boxShadow: '0 8px 16px rgba(0, 0, 0, 0.3)',
    maxWidth: '600px',
    margin: '50px auto',
    fontFamily: "'Poppins', sans-serif",
    animation: 'fadeIn 1s ease-in-out',
  },
  title: {
    color: '#fff',
    fontSize: '2.5rem',
    marginBottom: '20px',
    textShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)',
    animation: 'bounce 2s infinite',
  },
  counterText: {
    color: '#fff',
    fontSize: '1.5rem',
    marginBottom: '30px',
    textShadow: '1px 1px 2px rgba(0, 0, 0, 0.3)',
  },
  counterNumber: {
    color: '#ffcccb',
    fontWeight: 'bold',
    fontSize: '2rem',
    textShadow: '1px 1px 2px rgba(0, 0, 0, 0.3)',
  },
  buttonContainer: {
    display: 'flex',
    justifyContent: 'center',
    gap: '20px',
    marginBottom: '30px',
  },
  addButton: {
    backgroundColor: '#ff6f61',
    color: 'white',
    padding: '20px 40px',
    border: 'none',
    borderRadius: '50%',
    width: '100px',
    height: '100px',
    cursor: 'pointer',
    fontSize: '1rem',
    fontWeight: 'bold',
    transition: 'transform 0.2s ease, background-color 0.3s ease, box-shadow 0.3s ease',
    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.2)',
    position: 'relative',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  },
  eatButton: {
    backgroundColor: '#6a11cb',
    color: 'white',
    padding: '20px 40px',
    border: 'none',
    borderRadius: '50%',
    width: '100px',
    height: '100px',
    cursor: 'pointer',
    fontSize: '1rem',
    fontWeight: 'bold',
    transition: 'transform 0.2s ease, background-color 0.3s ease, box-shadow 0.3s ease',
    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.2)',
    position: 'relative',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  },
  appleContainer: {
    display: 'flex',
    justifyContent: 'center',
    flexWrap: 'wrap',
    gap: '10px',
    marginTop: '20px',
  },
  appleImage: {
    width: '50px',
    height: '50px',
    borderRadius: '50%',
    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.3)',
    transition: 'transform 0.3s ease, opacity 0.3s ease',
    animation: 'float 3s infinite ease-in-out',
  },
};

// Add stem and leaf to buttons using pseudo-elements
const buttonStyles = `
  .addButton::before, .eatButton::before {
    content: '';
    position: absolute;
    top: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 8px;
    height: 20px;
    background: #8b4513; // Brown color for stem
    border-radius: 5px;
  }

  .addButton::after, .eatButton::after {
    content: '';
    position: absolute;
    top: -15px;
    left: 55%;
    transform: translateX(-50%) rotate(-45deg);
    width: 10px;
    height: 10px;
    background: #32cd32; // Green color for leaf
    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  }

  .addButton:hover, .eatButton:hover {
    transform: scale(1.1);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.3);
  }

  .appleImage:hover {
    transform: scale(1.2) rotate(10deg);
    opacity: 0.8;
  }
`;

const styleSheet = document.createElement('style');
styleSheet.type = 'text/css';
styleSheet.innerText = buttonStyles;
document.head.appendChild(styleSheet);

const keyframes = `
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }
`;

const animationSheet = document.createElement('style');
animationSheet.type = 'text/css';
animationSheet.innerText = keyframes;
document.head.appendChild(animationSheet);

export default App;
