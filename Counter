App.js:
=============================
    import React from 'react';
import Counter from './counter';
function App() {
  return (
    <div className="App">
    <Counter/>
 </div>
)}
    export default App;
=============================
Counter.js:
==============================
import React, {useState} from 'react';
import './counter.css'
const Counter=()=>{
    const [count, setCount]=useState(0);
    return(
        <div>
            <h1>{count}</h1>
            <button onClick={()=>setCount(count+1)}>Increment</button>
            <button onClick={()=>setCount(count-1)}>Decrement</button>
        </div>
    )
}
export default Counter;
==============================
Counter.css:
=============================
.container {
    text-align: center;
    margin-top: 50px;
    font-family: Arial, sans-serif;
    background-color: navy;
}

.count {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 20px;
    background-color: aqua;
    border-radius: 5px;
}

button {
    margin: 5px;
    padding: 10px 20px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    border: none;
    border-radius: 50%;
    transition: background-color 0.3s ease, transform 0.3s ease;
    background-color: orange;
}

.increment {
    background-color: green;
    color: beige;
}

.increment:hover {
    background-color: gold;
    transform: scale(1.1); /* Optional: Add a slight zoom effect on hover */
}

.decrement {
    background-color: red;
    color: white;
}

.decrement:hover {
    background-color: black;
    transform: scale(1.1); /* Optional: Add a slight zoom effect on hover */
}
ASSIGNMENT-1:
======================================
Give me some idea on what is a Data type. What are Primitive Data types and Non-Primitive Data types. Explain with some examples.


Sol:
Data type:
In programming, a data type is essentially a classification of data that tells the computer how to interpret and use the data. It defines the type of value a variable can hold (like numbers, text, etc.) and what operations can be performed on that value.

1.Primitive data types: Primitive data types are the most basic types of data. These are simple and built into the programming language. They donâ€™t need to be broken down further.
1.Integer(int): Integers store whole numbers. 
    Java Example:
int age = 25;
int temperature = -2;  

      javaScript:
 
let age = 25
let temperature = -2;  


2. Floating-point (float, double):Floats store numbers with decimals.
     Java Example :
float pi = 3.14f;
double height = 5.9; 




   
JavaScript Example:
let pi = 3.14;
let height = 5.9;


3. Character (char): Characters store single letters or symbols.
Java Example:
char grade = 'A';
char symbol = '@';  

JavaScript Example:
let grade = 'A'; 
let symbol = '@';


4. String (String): Strings store sequences of characters (text).
Java Example:
String name = "Alice";  
String greeting = "Hello";  

JavaScript Example:
let name = "Alice";  
let greeting = "Hello";  


5. Boolean (boolean) :Booleans store true/false values, used for decision-making
Java Example:
boolean isStudent = true; 
boolean isRaining = false; 



JavaScript Example:
let isStudent = true; 
let isRaining = false; 


2. Non-Primitive Data Types:
These data types are not actually defined by the programming language but are created by the programmer.
1. Object:
Used to store key-value pairs.
Java Example:
class Person {
    String name = "Alice";
}

JavaScript Example:
let person = { name: "Alice", age: 25 };


2. Array:
Used to store multiple values in a single variable.
Java Example:
int[] numbers = {1, 2, 3, 4};



JavaScript Example:
let numbers = [1, 2, 3, 4];



3. Function (JavaScript only):
Functions are also considered objects in JavaScript.
JavaScript Example:
function greet() {
  return "Hello, world!";
}







